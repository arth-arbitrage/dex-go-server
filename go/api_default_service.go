/*
 * Arth-Arbitrage
 *
 * Arth Arbitrage API
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package restapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultApiService is a service that implents the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API. 
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// GetExchange - Exchange details
func (s *DefaultApiService) GetExchange(ctx context.Context, id int64) (ImplResponse, error) {
	// TODO - update GetExchange with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Exchange{}) or use other options such as http.Ok ...
	//return Response(200, Exchange{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetExchange method not implemented")
}

// GetLender - Get lender
func (s *DefaultApiService) GetLender(ctx context.Context, id int64) (ImplResponse, error) {
	// TODO - update GetLender with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Lender{}) or use other options such as http.Ok ...
	//return Response(200, Lender{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetLender method not implemented")
}

// GetLenderPools - Pool List
func (s *DefaultApiService) GetLenderPools(ctx context.Context, id int64) (ImplResponse, error) {
	// TODO - update GetLenderPools with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []LenderPool{}) or use other options such as http.Ok ...
	//return Response(200, []LenderPool{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetLenderPools method not implemented")
}

// GetSwapPools - Pool List
func (s *DefaultApiService) GetSwapPools(ctx context.Context, id int64) (ImplResponse, error) {
	// TODO - update GetSwapPools with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []SwapPool{}) or use other options such as http.Ok ...
	//return Response(200, []SwapPool{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSwapPools method not implemented")
}

// ListExchanges - Get exchange list
func (s *DefaultApiService) ListExchanges(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListExchanges with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Exchange{}) or use other options such as http.Ok ...
	//return Response(200, []Exchange{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListExchanges method not implemented")
}

// ListLenders - Lending service list
func (s *DefaultApiService) ListLenders(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListLenders with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Lender{}) or use other options such as http.Ok ...
	//return Response(200, []Lender{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListLenders method not implemented")
}

// Multiswap - process swap
func (s *DefaultApiService) Multiswap(ctx context.Context, multiSwapExec MultiSwapExec) (ImplResponse, error) {
	// TODO - update Multiswap with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	//return Response(201, nil),nil

	//TODO: Uncomment the next line to return response Response(422, {}) or use other options such as http.Ok ...
	//return Response(422, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Multiswap method not implemented")
}

// Swap - process swap
func (s *DefaultApiService) Swap(ctx context.Context, swapExec SwapExec) (ImplResponse, error) {
	// TODO - update Swap with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	//return Response(201, nil),nil

	//TODO: Uncomment the next line to return response Response(422, {}) or use other options such as http.Ok ...
	//return Response(422, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Swap method not implemented")
}

